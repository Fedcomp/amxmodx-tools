enum_from_primitive! {
#[derive(Debug, PartialEq)]
#[allow(non_snake_case)]
pub enum OpcodeType {
    OP_NONE, // invalid opcode
    OP_LOAD_PRI,
    OP_LOAD_ALT,
    OP_LOAD_S_PRI,
    OP_LOAD_S_ALT,
    OP_LREF_PRI,
    OP_LREF_ALT,
    OP_LREF_S_PRI,
    OP_LREF_S_ALT,
    OP_LOAD_I,
    OP_LODB_I,
    OP_CONST_PRI,
    OP_CONST_ALT,
    OP_ADDR_PRI,
    OP_ADDR_ALT,
    OP_STOR_PRI,
    OP_STOR_ALT,
    OP_STOR_S_PRI,
    OP_STOR_S_ALT,
    OP_SREF_PRI,
    OP_SREF_ALT,
    OP_SREF_S_PRI,
    OP_SREF_S_ALT,
    OP_STOR_I,
    OP_STRB_I,
    OP_LIDX,
    OP_LIDX_B,
    OP_IDXADDR,
    OP_IDXADDR_B,
    OP_ALIGN_PRI,
    OP_ALIGN_ALT,
    OP_LCTRL,
    OP_SCTRL,
    OP_MOVE_PRI,
    OP_MOVE_ALT,
    OP_XCHG,
    OP_PUSH_PRI,
    OP_PUSH_ALT,
    OP_PUSH_R,
    OP_PUSH_C,
    OP_PUSH,
    OP_PUSH_S,
    OP_POP_PRI,
    OP_POP_ALT,
    OP_STACK,
    OP_HEAP,
    OP_PROC,
    OP_RET,
    OP_RETN,
    OP_CALL,
    OP_CALL_PRI,
    OP_JUMP,
    OP_JREL,
    OP_JZER,
    OP_JNZ,
    OP_JEQ,
    OP_JNEQ,
    OP_JLESS,
    OP_JLEQ,
    OP_JGRTR,
    OP_JGEQ,
    OP_JSLESS,
    OP_JSLEQ,
    OP_JSGRTR,
    OP_JSGEQ,
    OP_SHL,
    OP_SHR,
    OP_SSHR,
    OP_SHL_C_PRI,
    OP_SHL_C_ALT,
    OP_SHR_C_PRI,
    OP_SHR_C_ALT,
    OP_SMUL,
    OP_SDIV,
    OP_SDIV_ALT,
    OP_UMUL,
    OP_UDIV,
    OP_UDIV_ALT,
    OP_ADD,
    OP_SUB,
    OP_SUB_ALT,
    OP_AND,
    OP_OR,
    OP_XOR,
    OP_NOT,
    OP_NEG,
    OP_INVERT,
    OP_ADD_C,
    OP_SMUL_C,
    OP_ZERO_PRI,
    OP_ZERO_ALT,
    OP_ZERO,
    OP_ZERO_S,
    OP_SIGN_PRI,
    OP_SIGN_ALT,
    OP_EQ,
    OP_NEQ,
    OP_LESS,
    OP_LEQ,
    OP_GRTR,
    OP_GEQ,
    OP_SLESS,
    OP_SLEQ,
    OP_SGRTR,
    OP_SGEQ,
    OP_EQ_C_PRI,
    OP_EQ_C_ALT,
    OP_INC_PRI,
    OP_INC_ALT,
    OP_INC,
    OP_INC_S,
    OP_INC_I,
    OP_DEC_PRI,
    OP_DEC_ALT,
    OP_DEC,
    OP_DEC_S,
    OP_DEC_I,
    OP_MOVS,
    OP_CMPS,
    OP_FILL,
    OP_HALT,
    OP_BOUNDS,
    OP_SYSREQ_PRI,
    OP_SYSREQ_C,
    OP_FILE,    // obsolete
    OP_LINE,    // obsolete
    OP_SYMBOL,  // obsolete
    OP_SRANGE,  // obsolete
    OP_JUMP_PRI,
    OP_SWITCH,
    OP_CASETBL,
    OP_SWAP_PRI,
    OP_SWAP_ALT,
    OP_PUSHADDR,
    OP_NOP,
    OP_SYSREQ_D,
    OP_SYMTAG,  // obsolete
    OP_BREAK, // End of AMXX op codes
    // List of rxxma pseudo opcodes, careful!
    OP_CASENONE,
    OP_CASE,
    OP_CASEJMP
}}

pub use self::OpcodeType::*;

pub const SINGLE_PARAM_OPCODES: [u32; 74] = [
    OP_LOAD_PRI as u32,
    OP_LOAD_ALT as u32,
    OP_LOAD_S_PRI as u32,
    OP_LOAD_S_ALT as u32,
    OP_LREF_PRI as u32,
    OP_LREF_ALT as u32,
    OP_LREF_S_PRI as u32,
    OP_LREF_S_ALT as u32,
    OP_LODB_I as u32,
    OP_CONST_PRI as u32,
    OP_CONST_ALT as u32,
    OP_ADDR_PRI as u32,
    OP_ADDR_ALT as u32,
    OP_STOR_PRI as u32,
    OP_STOR_ALT as u32,
    OP_STOR_S_PRI as u32,
    OP_STOR_S_ALT as u32,
    OP_SREF_PRI as u32,
    OP_SREF_ALT as u32,
    OP_SREF_S_PRI as u32,
    OP_SREF_S_ALT as u32,
    OP_STRB_I as u32,
    OP_LIDX_B as u32,
    OP_IDXADDR_B as u32,
    OP_ALIGN_PRI as u32,
    OP_ALIGN_ALT as u32,
    OP_LCTRL as u32,
    OP_SCTRL as u32,
    OP_PUSH_R as u32,
    OP_PUSH_C as u32,
    OP_PUSH as u32,
    OP_PUSH_S as u32,
    OP_STACK as u32,
    OP_HEAP as u32,
    OP_CALL as u32,
    OP_JUMP as u32,
    OP_JREL as u32,
    OP_JZER as u32,
    OP_JNZ as u32,
    OP_JEQ as u32,
    OP_JNEQ as u32,
    OP_JLESS as u32,
    OP_JLEQ as u32,
    OP_JGRTR as u32,
    OP_JGEQ as u32,
    OP_JSLESS as u32,
    OP_JSLEQ as u32,
    OP_JSGRTR as u32,
    OP_JSGEQ as u32,
    OP_SHL as u32,
    OP_SHR as u32,
    OP_SSHR as u32,
    OP_SHL_C_PRI as u32,
    OP_SHL_C_ALT as u32,
    OP_SHR_C_PRI as u32,
    OP_SHR_C_ALT as u32,
    OP_ADD_C as u32,
    OP_SMUL_C as u32,
    OP_ZERO as u32,
    OP_ZERO_S as u32,
    OP_EQ_C_PRI as u32,
    OP_EQ_C_ALT as u32,
    OP_INC as u32,
    OP_INC_S as u32,
    OP_DEC as u32,
    OP_DEC_S as u32,
    OP_MOVS as u32,
    OP_CMPS as u32,
    OP_FILL as u32,
    OP_HALT as u32,
    OP_BOUNDS as u32,
    OP_SYSREQ_C as u32,
    OP_SWITCH as u32,
    OP_PUSHADDR as u32,
];
