use num_derive::FromPrimitive;

#[derive(Copy, Clone, Debug, PartialEq, FromPrimitive)]
pub enum OpcodeType {
    OpNone, // invalid opcode
    OpLoadPri,
    OpLoadAlt,
    OpLoadSPri,
    OpLoadSAlt,
    OpLrefPri,
    OpLrefAlt,
    OpLrefSPri,
    OpLrefSAlt,
    OpLoadI,
    OpLodbI,
    OpConstPri,
    OpConstAlt,
    OpAddrPri,
    OpAddrAlt,
    OpStorPri,
    OpStorAlt,
    OpStorSPri,
    OpStorSAlt,
    OpSrefPri,
    OpSrefAlt,
    OpSrefSPri,
    OpSrefSAlt,
    OpStorI,
    OpStrbI,
    OpLidx,
    OpLidxB,
    OpIdxaddr,
    OpIdxaddrB,
    OpAlignPri,
    OpAlignAlt,
    OpLctrl,
    OpSctrl,
    OpMovePri,
    OpMoveAlt,
    OpXchg,
    OpPushPri,
    OpPushAlt,
    OpPushR,
    OpPushC,
    OpPush,
    OpPushS,
    OpPopPri,
    OpPopAlt,
    OpStack,
    OpHeap,
    OpProc,
    OpRet,
    OpRetn,
    OpCall,
    OpCallPri,
    OpJump,
    OpJrel,
    OpJzer,
    OpJnz,
    OpJeq,
    OpJneq,
    OpJless,
    OpJleq,
    OpJgrtr,
    OpJgeq,
    OpJsless,
    OpJsleq,
    OpJsgrtr,
    OpJsgeq,
    OpShl,
    OpShr,
    OpSshr,
    OpShlCPri,
    OpShlCAlt,
    OpShrCPri,
    OpShrCAlt,
    OpSmul,
    OpSdiv,
    OpSdivAlt,
    OpUmul,
    OpUdiv,
    OpUdivAlt,
    OpAdd,
    OpSub,
    OpSubAlt,
    OpAnd,
    OpOr,
    OpXor,
    OpNot,
    OpNeg,
    OpInvert,
    OpAddC,
    OpSmulC,
    OpZeroPri,
    OpZeroAlt,
    OpZero,
    OpZeroS,
    OpSignPri,
    OpSignAlt,
    OpEq,
    OpNeq,
    OpLess,
    OpLeq,
    OpGrtr,
    OpGeq,
    OpSless,
    OpSleq,
    OpSgrtr,
    OpSgeq,
    OpEqCPri,
    OpEqCAlt,
    OpIncPri,
    OpIncAlt,
    OpInc,
    OpIncS,
    OpIncI,
    OpDecPri,
    OpDecAlt,
    OpDec,
    OpDecS,
    OpDecI,
    OpMovs,
    OpCmps,
    OpFill,
    OpHalt,
    OpBounds,
    OpSysreqPri,
    OpSysreqC,
    OpFile,   // obsolete
    OpLine,   // obsolete
    OpSymbol, // obsolete
    OpSrange, // obsolete
    OpJumpPri,
    OpSwitch,
    OpCasetbl,
    OpSwapPri,
    OpSwapAlt,
    OpPushaddr,
    OpNop,
    OpSysreqD,
    OpSymtag, // obsolete
    OpBreak,  // End of AMXX op codes
}

use self::OpcodeType::*;

pub const SINGLE_PARAM_OPCODES: &[OpcodeType] = &[
    OpLoadPri, OpLoadAlt, OpLoadSPri, OpLoadSAlt, OpLrefPri, OpLrefAlt, OpLrefSPri, OpLrefSAlt,
    OpLodbI, OpConstPri, OpConstAlt, OpAddrPri, OpAddrAlt, OpStorPri, OpStorAlt, OpStorSPri,
    OpStorSAlt, OpSrefPri, OpSrefAlt, OpSrefSPri, OpSrefSAlt, OpStrbI, OpLidxB, OpIdxaddrB,
    OpAlignPri, OpAlignAlt, OpLctrl, OpSctrl, OpPushR, OpPushC, OpPush, OpPushS, OpStack, OpHeap,
    OpCall, OpJump, OpJrel, OpJzer, OpJnz, OpJeq, OpJneq, OpJless, OpJleq, OpJgrtr, OpJgeq,
    OpJsless, OpJsleq, OpJsgrtr, OpJsgeq, OpShl, OpShr, OpSshr, OpShlCPri, OpShlCAlt, OpShrCPri,
    OpShrCAlt, OpAddC, OpSmulC, OpZero, OpZeroS, OpEqCPri, OpEqCAlt, OpInc, OpIncS, OpDec, OpDecS,
    OpMovs, OpCmps, OpFill, OpHalt, OpBounds, OpSysreqC, OpSwitch, OpPushaddr,
];
